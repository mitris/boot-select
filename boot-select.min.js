/* boot-select.js v2.0.0 http://github.com/mitris/boot-select */
!function(t){"use strict"
var e=function(e,s){this.element=t(e),this.settings=t.extend(!0,{},t.fn.bootSelect.defaults,"object"==typeof s&&s,this.element.data()),this.value=!1,this.init()}
e.prototype={constructor:e,init:function(){this.visible=!1,this._generateView(),this._applySettings(),this._fixWidth(),this._updateOptions(),this._updateSelected(),this._attachEvents()},_generateView:function(){this.view=t('<div class="dropdown btn-group boot-select"></div>'),this.button=t('<span class="btn dropdown-toggle input-block-level"></span>'),this.current=t('<span class="current"></span>'),this.placeholder=t('<span class="placeholder">'+this.settings.placeholder+"</span>"),this.actions=t('<span class="actions"></span>'),this.clearButton=t('<span class="clear">'+this.settings.clearButton+"</span>"),this.toggleButton=t('<span class="toggle">'+this.settings.toggleButton+"</span>"),this.dropdown=t('<ul class="dropdown-menu"></ul>'),this.view.append(this.button,this.dropdown),this.button.append(this.current,this.placeholder,this.actions),this.actions.append(this.clearButton,this.toggleButton),this.element.hide().before(this.view)},_updateOptions:function(){var e=this
e.options={},e.dropdown.empty(),e.elementOptionsLength=this.element.get(0).options.length,e.element.find('option[value][value!=""]').each(function(){var s=t('<li><a href="#">'+t(this).text()+"</a></li>")
s.data("button-class",t(this).data("button-class")),t(this).data("class")&&s.addClass(t(this).data("class")),e.dropdown.append(s),e.options[t(this).val()]=s,t(this).is(":disabled")&&s.addClass("disabled"),s.data("value",t(this).val())}),this._scrollToCurrent()},_updateSelected:function(){this._select(this.element.find(":selected"))},_fixWidth:function(){var t=this.button.width()-this.clearButton.outerWidth()-this.toggleButton.outerWidth()
this.current.width(t),this.placeholder.width(t)},_applySettings:function(){this.element.is(":disabled")&&this.button.addClass("disabled"),this.settings.enableClear||this.clearButton.remove(),this.element.data("class")&&this.view.addClass(this.element.data("class")),this.button.data("original-class")||this.button.data("original-class",this.button.attr("class"))},_attachEvents:function(){var e=this
e.view.on("click.boot-select",function(t){t.stopPropagation()}),e.button.on("click.boot-select",function(){e.toggle()}),e.clearButton.on("click.boot-select",function(t){t.stopPropagation(),e.clear()}),e.dropdown.on("click.boot-select","li",function(){t(this).hasClass("disabled")||(e.select(t(this).data("value")),e.hide())}),e.element.on("change.boot-select",function(){e.select(this.value)}),t(window).on("resize.boot-select",function(){e._fixWidth()}),e.settings.keyboardNavigation&&t(document).on("keypress.boot-select",function(t){if(t.stopPropagation(),e.visible&&/(13|27|38|40)/.test(t.keyCode)){if((27==t.keyCode||13==t.keyCode)&&e.hide(),38==t.keyCode){var s=e.element.find("option:selected").prevAll('[value][value!=""]:not(:disabled):first')
log(s,s.index()),s.index()>0&&e.select(s)}if(40==t.keyCode){var s=e.element.find("option:selected").nextAll('[value][value!=""]:not(:disabled):first')
log(s,s.index()),s.index()>0&&e.select(s)}}})},_scrollToCurrent:function(){this.dropdown.scrollTop(this.dropdown.find(".active").index()*this.dropdown.find(".active").outerHeight()-this.dropdown.outerHeight()/2)},_select:function(e){if(e instanceof jQuery)var s=e
else if(e instanceof HTMLElement)var s=t(e)
else var s=this.element.find('option[value="'+e+'"]')
s.val()?s.not(":disabled").prop("selected",!0).is("option")&&(this.value&&this.options[this.value].removeClass("active"),this.value=s.val(),this.options[this.value].addClass("active"),this.current.text(this.options[this.value].text()).show(),this.placeholder.hide(),this.button.attr("class",this.button.data("original-class")),this.options[this.value].data("button-class")&&this.button.addClass(this.options[this.value].data("button-class"))):this.clear(),this._scrollToCurrent()},select:function(t){this._select(t),this.settings.onChange()},clear:function(){var t=this.element.find("option:not([value])")
t?t.prop("selected",!0):this.element.prop("selectedIndex",-1),this.dropdown.find(".active").removeClass("active"),this.current.hide(),this.placeholder.show(),this.button.attr("class",this.button.data("original-class")),this._scrollToCurrent()},update:function(){return this._updateOptions()},toggle:function(){this.button.hasClass("disabled")||(this.visible?this.hide():this.show())},show:function(){var e=this
this._scrollToCurrent(),this.button.addClass("active"),this.dropdown.show(),this.visible=!0,t(document).one("click.boot-select",function(){e.visible&&e.hide()})},hide:function(){this._scrollToCurrent(),this.button.removeClass("active"),this.dropdown.hide(),this.visible=!1}},t.fn.bootSelect=function(s){var i=Array.apply(null,arguments)
return i.shift(),this.each(function(){var o=t(this),n=o.data("bootSelect"),a="object"==typeof s&&s
return n&&"object"==typeof n||o.data("bootSelect",n=new e(this,a)),"string"==typeof s&&"function"==typeof n[s]&&"_"!=s.charAt(0)?n[s].apply(n,i):("string"==typeof s&&void 0===n[s]&&jQuery.error('BootSelect: Method "'+s+'" does not exist.'),void 0)})},t.fn.bootSelect.defaults={enableClear:!0,keyboardNavigation:!0,placeholder:"Выберите из списка",clearButton:"&times;",toggleButton:'<i class="icon-angle-down"></i>',onChange:function(){}}}(window.jQuery)
