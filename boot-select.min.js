/* boot-select.js v1.0.0 http://github.com/mitris/boot-select */
!function(t){"use strict"
var o=function(o,e){this.$element=t(o),this.options=t.extend({},t.fn.bootSelect.defaults,this.$element.data(),"object"==typeof e&&e),this.createDropdown(),this.updateOptions(),this.render(),this.attachEvents(),this.init()}
o.prototype={constructor:o,init:function(){var o=this
!this.options.debug&&this.$element.hide(),this.$element.find("option:selected").each(function(){o.setCurrent(t(this))}),this.$element.on("change",function(){o.setCurrent(t(this).find("option:selected"))}),this.options.onInit.apply(this)},createDropdown:function(){var o=this
this.$dropdown=t('<div class="dropdown pull-left boot-select"><span class="btn dropdown-toggle '+this.options.size+'">'+'<span class="option pull-left hide"></span>'+'<span class="placeholder pull-left hide">'+this.options.placeholder+"</span>"+'<span class="pull-right toggle"><i class="icon-angle-down"></i></span>'+'<span class="pull-right clear hide">&times;</span>'+"</span>"+'<div class="dropdown-menu">'+'<div class="nano">'+'<div class="content">'+"<ul></ul>"+"</div>"+"</div>"+"</div>"+"</div>"),this.$button=this.$dropdown.find(".btn"),this.$current=this.$button.find(".option"),this.$placeholder=this.$button.find(".placeholder"),this.$clear=this.$button.find(".clear"),this.$dropdown_menu=this.$dropdown.find(".dropdown-menu"),this.$list=this.$dropdown_menu.find("ul"),this.$button.data("original-class",this.$button.attr("class")),this.$current.data("original-class",this.$current.attr("class")),this.$button.on("click.boot-select",function(){t.fn.nanoScroller&&o.$dropdown.find(".nano").nanoScroller({preventPageScrolling:!0}),o.$dropdown.toggleClass("open"),o.scrollToSelectedOption()}),this.options.enableClear&&this.$clear.show().on("click.boot-select",function(t){t.stopPropagation(),o.clear()})},updateOptions:function(){var o=this
o.$list.empty(),o.$list_options={},o.$element.find("option").each(function(){var e=t(this)
o.$list_options[e.val()]=t("<li><span>"+e.text()+"</span></li>"),o.$list_options[e.val()].find("span").addClass(e.data("option-class")).data("value",e.val()),e.val()&&(o.$list_options[e.val()].on("click",function(){o.setCurrent(e)}),o.$list.append(o.$list_options[e.val()]))}),this.options.onUpdate.apply(this)},setCurrent:function(t,o){o=o||!1,this.options.onChangeBefore.apply(this),t.val()?(this.$list.find("li").removeClass("active"),this.$list_options[t.val()].addClass("active"),this.$element.val(t.val()),this.$current.text(t.text()).removeClass().addClass(this.$current.data("original-class")).addClass(t.data("current-class")).show(),this.$button.removeClass().addClass(this.$button.data("original-class")).addClass(t.data("btn-class")),this.$placeholder.hide(),this.scrollToSelectedOption(),!o&&this.$dropdown.removeClass("open")):this.clear(),this.options.onChange.apply(this)},scrollToSelectedOption:function(){this.$dropdown_menu.animate({scrollTop:this.$list.find("li.active").index()*this.$list.find("li.active").outerHeight()},100)},render:function(){this.$element.after(this.$dropdown)},clear:function(){this.$dropdown_menu.animate({scrollTop:0},100),this.$list.find("li").removeClass("active"),this.$element.prop("selectedIndex",0),this.$current.hide(),this.$button.attr("class",this.$button.data("original-class")),this.$placeholder.show(),this.options.onClear.apply(this)},attachEvents:function(){var o=this
if(o.options.keyboardNavigation&&t(document).on("keypress.boot-select",function(t){o.$dropdown.hasClass("open")&&/(38|40|27|13)/.test(t.keyCode)&&(t.preventDefault(),t.stopPropagation(),(27==t.keyCode||13==t.keyCode)&&o.$dropdown.removeClass("open"),38==t.keyCode&&o.setCurrent(o.$element.find("option:selected").prev(),!0),40==t.keyCode&&o.setCurrent(o.$element.find("option:selected").next(),!0))}),o.options.autoClose){var o=this
t(document).on("click.boot-select",function(t){o.$dropdown.is(t.target)||o.$dropdown.has(t.target).length||o.$dropdown.removeClass("open")})}}},t.fn.bootSelect=function(e){var n=Array.apply(null,arguments)
return n.shift(),this.each(function(){var s=t(this),i=s.data("bootSelect"),a="object"==typeof e&&e
return i&&"object"==typeof i||s.data("bootSelect",i=new o(this,a)),"string"==typeof e&&"function"==typeof i[e]?i[e].apply(i,n):("string"==typeof e&&void 0===i[e]&&i.options.debug&&console.log('BootSelect Error: Method "'+e+'" does not exist.'),void 0)})},t.fn.bootSelect.defaults={debug:!1,enableClear:!0,autoClose:!0,keyboardNavigation:!0,size:"input-initial",placeholder:"Выберите из списка",onInit:function(){},onUpdate:function(){},onChange:function(){},onChangeBefore:function(){},onClear:function(){}},t(document).find("[data-boot-select=true]").bootSelect()}(window.jQuery)
